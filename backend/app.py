from flask import Flask, session, jsonify, request
from flask_cors import CORS
import redis


app = Flask(__name__)
# host='redis'
r = redis.StrictRedis(host='localhost', port=6379, decode_responses=True)

CORS(app) # 테스트용

@app.route('/api/cve', methods=['GET'])
def main():
    cve_keys = r.keys('cve:*')

    cve_data = {}

    for key in cve_keys:
        cve_data[key] = r.hgetall(key)

    return jsonify(cve_data)

@app.route('/api/cve/get', methods=['GET'])
def get_cve():
    search_value = request.args.get('search', '').lower() 
    if not search_value:
        return jsonify({"message": "Search value is required"}), 400

    cve_keys = r.keys('cve:*')
    results = {}

    for key in cve_keys:
        cve_data = r.hgetall(key)

        if any(search_value in value.lower() for value in cve_data.values()) or (search_value.lower() in key.lower()):
            results[key] = cve_data

    if results:
        return jsonify(results)
    else:
        return jsonify({"message": "No matching CVE found"}), 404
    
@app.route('/api/cve/<cveName>', methods=['GET'])
def get_cve_by_key(cveName):
    try:
        cve_data = r.hgetall(f'cve:{cveName}')
        
        if not cve_data:
            return jsonify({"error": "CVE not found"}), 404

        return jsonify(cve_data)

    except Exception as e:
        print(f"Error retrieving CVE data: {e}")
        return jsonify({"error": "Internal server error"}), 500
    
if __name__ == "__main__":
    app.run()